######### 全局设置 #########
### 下载器选择，说明：
### 1.streamlink：使用streamlink与ffmpeg联合下载，支持fmp4流和ts流的多线程下载。
###   下载flv流时，将仅使用ffmpeg。请手动安装streamlink以及ffmpeg。
### 2.ffmpeg：使用ffmpeg下载，请手动安装ffmpeg。
### 3.stream-gears：默认下载插件可防止录制花屏（实验性功能）。
#downloader: streamlink
#file_size: 2621440000
#segment_time: '01:00:00'
#filtering_threshold: 20
#filename_prefix: "{streamer}-{title} %Y-%m-%d %H-%M-%S"

#uploader: biliup-rs
#submit_api: client
lines: AUTO
threads: 3
#uploading_record: true

delay: 0
event_loop_interval: 40
checker_sleep: 15
pool1_size: 5
pool2_size: 5
check_sourcecode: 15

#use_live_cover: true



######### 平台设置 #########
#------ 斗鱼 ------#
#douyucdn: tct-h5
#douyu_danmaku: true

#------ 虎牙 ------#
#huyacdn: AL
#huya_danmaku: true

#------ 哔哩哔哩 ------#
#bilibili_danmaku: true
### 哔哩哔哩直播流协议选择，说明：
### 仅国内IP能够解析到fmp4流，海外IP只能解析到flv流（ov05与ov07）和ts流（ov105）。
### fmp4流需要一定时间出现，某些小主播（大部分只有原画选项的主播）无fmp4流。
### 目前策略为如果开播时间小于60s，程序将会反复尝试获取fmp4流，如果获取失败则回退到flv流。
### 目前录制fmp4流需要downloader为streamlink。
#bili_protocol: stream
### 哔哩哔哩直播优选CDN，CDN信息可参阅 https://rec.danmuji.org/dev/bilibili-cdn/
#bili_perfCDN: 'cn-gotcha208,ov-gotcha05'
### 哔哩哔哩直播强制原画，仅当CDN为cn-gotcha01时可用。
#bili_force_source: false
### 自定义哔哩哔哩直播API，用于获取指定区域的直播流链接。
#bili_liveapi: 'https://api.live.bilibili.com'
### 自定义哔哩哔哩直播回退API，说明：
### 直播API无法获取到fmp4流时，将使用直播回退API重新获取flv直播流，不使用直播API重新获取。
### 海外机器玩法：bili_liveapi设置为大陆API，并将bili_fallback_api设置为官方API，
###              优选fmp4流并使用streamlink下载器，最后设置优选cn-gotcha208,ov-gotcha05两个CDN。
### 大陆机器玩法：bili_liveapi设置为官方API，并将bili_fallback_api设置为海外API，
###              优选fmp4流并使用streamlink下载器，最后设置优选cn-gotcha208,ov-gotcha05两个CDN。
### 这样设置能使用cn208的fmp4流稳定录制（海外机器可通过自建DNS优选指定线路的cn208节点），
### 没有fmp4流的小主播也能回退到ov05（网宿线路，有大陆与海外节点）录制flv流。
#bili_fallback_api: 'https://api.live.bilibili.com'
#bili_cdn_fallback: true
#bili_force_ov05_ip: '163.171.197.234'
### 强制替换cn-gotcha01域名，说明：
### 强制替换B站自建的cn-gotcha01为指定自选域名，可设置多个域名。
### CDN列表可参阅 https://rec.danmuji.org/dev/bilibili-cdn/ 中“B站视频云”的部分。
### 此功能目前会和stream-gears冲突导致分段较多，请使用ffmpeg录制。
### 如果海外机器需要使用此功能，需要使用bili_liveapi选项指定大陆API以获取cn-gotcha01的节点信息。
### 海外机器玩法：使用国内机器自建反代API，或使用 https://docs.qq.com/doc/DV2dvbXBrckNscU9x 提供的公共反代API。
### 如果海外机器到联通或者移动线路不错，可以指定一些联通或者移动的节点。
### 开启后，每次会随机返回一个指定节点，并会自动判断节点是否可用。
#bili_force_cn01: false
#bili_force_cn01_domains: 'cn-jxnc-cm-01-16.bilivideo.com,cn-gddg-cm-01-06.bilivideo.com,cn-fjqz-cm-01-06.bilivideo.com,cn-jssz-cm-01-02.bilivideo.com,cn-gddg-ct-01-12.bilivideo.com'

#------ YouTube ------#
### 以下YouTube下载选项需安装ffmpeg
### 设置YouTube的偏好视频编码，支持同时设置多个编码，能自动选择画质/音质最好的版本。
### 视频：avc编码可下载最高1080p的视频，vp9编码、av01编码可下载最高8k的视频。
### 音频：opus编码采样率最高48KHz，mp4a编码采样率最高44.1KHz，理论上opus编码音质会更好。
### 如需指定封装格式，请按以下推荐设置：
### mp4：av01|avc+mp4a；mkv：vp9+mp4a,avc+opus；webm：av01|vp9+opus.
#youtube_prefer_vcodec: 'av01|vp9|avc'
#youtube_prefer_acodec: 'mp4a|opus'
#youtube_max_resolution: 1080
#youtube_max_videosize: '5G'
#use_youtube_cover: true
#youtube_after_date: '20220201'
#youtube_before_date: '20230201'
#use_new_ytb_downloader: false

#------ Twitch ------#
#twitch_danmaku: true
#twitch_disable_ads: false



######### 主播设置 #########
streamers:
### 最简配置示例
    星际2Stats拔本神族天梯第一视角:
        url:
            - https://www.twitch.tv/kimdaeyeob3

### 完整可选配置示例
    星际2INnoVation吕布卫星人族天梯第一视角:
        url:
            - https://www.twitch.tv/innovation_s2
            - https://www.panda.tv/1160340
        title: "{title}-{streamer}%Y-%m-%d录播{url}"
        tid: 171
        copyright: 2
        cover_path: cover/innovation_s2.jpg
        description: |- 
          视频简介：{title} %Y-%m-%d %H:%M:%S
          {streamer}主播直播间地址：{url}
          ---
          Powered By biliup
          GitHub：https://github.com/biliup/biliup
        #dynamic: '新录播已上传'
        #dtime: 1704038400
        uploader: biliup-rs
        #filename_prefix: "%Y-%m-%d %H-%M-%S {streamer}-{title}"
        user_cookie: cookies.json
        #use_live_cover: true
        tags:
            - biliup
            - 视频标签
        #preprocessor:
            #- run: sh ./run.sh
        #postprocessor:
        #    - run: echo hello! ### 执行任意命令，等同于在shell中运行,视频文件路径作为标准输入传入
        #    - mv: backup/ ### 移动文件到backup目录下
        #    - run: python3 path/to/mail.py ### 执行一个 Python 脚本，可以用来发送邮件等。自动发信通知脚本示例 https://biliup.github.io/biliup/Guide.html#%E4%B8%8A%E4%BC%A0%E5%AE%8C%E6%88%90%E5%90%8E%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5
        #    - run: sh ./run.sh ### 执行一个shell脚本，用途多样，主要调用系统内的cli工具。自动上传网盘脚本示例 https://gist.github.com/UVJkiNTQ/ae4282e8f9fe4e45b3144b57605b4178
            #- rm ### 删除文件
        #format: mp4
        #opt_args:
        #    - '-ss'
        #    - '00:00:16' # 跳过开始的16秒



######### 用户cookie #########
#user:
    #------ 哔哩哔哩 ------#
    #bili_cookie: 'SESSDATA=none; bili_jct=none;DedeUserID__ckMd5=none;DedeUserID=123;access_token=none;'
    #customAPI_use_cookie : false

    #------ 抖音 ------#
    #douyin_cookie: '__ac_nonce=none; __ac_signature=none;'

    #------ Twitch ------#
    #twitch_cookie: 'none'

    #------ YouTube ------#
    #youtube_cookie: 'cookies.txt'

    #------ Niconico ------#
    #niconico-email: 'none'
    #niconico-password: 'none'
    #niconico-user-session: 'none'
    #niconico-purge-credentials: 'none'



######### 日志输出配置 #########
LOGGING:
    formatters:
        verbose:
            format: '%(asctime)s %(filename)s[line:%(lineno)d](Pid:%(process)d Tname:%(threadName)s) %(levelname)s %(message)s'
            datefmt: '%Y-%m-%d %H:%M:%S'
        simple:
            format: '%(filename)s%(lineno)d[%(levelname)s]Tname:%(threadName)s %(message)s'
    handlers:
        console:
            level: DEBUG
            class: logging.StreamHandler
            formatter: simple
            stream: ext://sys.stdout
        file:
            level: DEBUG
            class: biliup.common.log.SafeRotatingFileHandler
            when: W0
            interval: 1
            backupCount: 1
            filename: ds_update.log
            formatter: verbose
    root:
        handlers: [ console ]
        level: INFO
    loggers:
        biliup:
            handlers: [ file ]
            level: INFO
